name: Run Tests and Generate Allure Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
      SPRING_DATASOURCE_USERNAME: testuser
      SPRING_DATASOURCE_PASSWORD: testpass

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies and start React frontend
        run: |
          cd frontend
          npm install
          nohup npm run start > react.log 2>&1 &
          cd ..

      - name: Wait for frontend to be available
        run: |
          for i in {1..30}; do
            curl --silent http://127.0.0.1:3000 && break
            echo "Waiting for frontend..."
            sleep 2
          done

      - name: Show React frontend logs
        run: cat react.log || true

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Spring Boot app
        run: mvn clean package -DskipTests

      - name: Start Spring Boot in background
        run: |
          nohup java -jar target/*.jar > spring.log 2>&1 &
          sleep 20

      - name: Wait for Spring Boot to open port 8080
        run: |
          echo "üïí Waiting for Spring Boot on port 8080..."
          for i in {1..30}; do
            nc -z localhost 8080 && echo "‚úÖ Spring Boot is UP!" && break
            echo "‚è≥ $i: Still waiting..."
            sleep 3
          done

      - name: Run tests and generate reports
        run: mvn clean test verify -Dspring.profiles.active=test

      - name: Show Spring Boot logs
        if: always()
        run: cat spring.log || true

      - name: Run API tests with Postman (Newman)
        run: |
          npm install -g newman
          newman run "postman/Ecommerce API Test.postman_collection.json" \
            --reporters cli,junit \
            --reporter-junit-export target/newman-report.xml
          

      - name: Generate Allure Report via Maven
        run: mvn allure:report

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/site/allure-maven-plugin

      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

      - name: Upload Postman (Newman) Test Report
        uses: actions/upload-artifact@v4
        with:
          name: newman-report
          path: target/newman-report.xml