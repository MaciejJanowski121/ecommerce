name: Run Tests and Generate Allure Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DISPLAY: ":99"  # dla Firefox w trybie headless

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Firefox and GeckoDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox xvfb
          export FIREFOX_BIN=$(which firefox)
          GECKO_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | grep 'tag_name' | cut -d\" -f4)
          wget "https://github.com/mozilla/geckodriver/releases/download/$GECKO_VERSION/geckodriver-$GECKO_VERSION-linux64.tar.gz"
          tar -xzf "geckodriver-$GECKO_VERSION-linux64.tar.gz"
          chmod +x geckodriver
          sudo mv geckodriver /usr/local/bin/
          Xvfb :99 -screen 0 1920x1080x24 &

      - name: Install and run React frontend
        run: |
         cd frontend
         npm install
         nohup npm run start > ../react.log 2>&1 &
         cd ..

      - name: Wait for frontend to be available
        run: |
         for i in {1..30}; do
         curl --silent http://127.0.0.1:3000 && break
         echo "Waiting for frontend..."
         sleep 2
         done

      - name: Show React frontend logs
        run: cat frontend/react.log || true

      - name: Check which ports are listening
        run: lsof -i -P -n | grep LISTEN || echo "‚ö†Ô∏è Kein Dienst aktiv"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Spring Boot app
        run: mvn clean package -DskipTests

      - name: Start Spring Boot in background
        run: |
          nohup java -jar target/*.jar > spring.log 2>&1 &
          sleep 20

      - name: Run tests and generate JaCoCo Report
        run: mvn test

      - name: Show failed test log (Surefire Report)
        if: failure()
        run: |
          echo "üß™ Inhalt der Surefire-Reports:"
          cat target/surefire-reports/*.txt || echo "‚ö†Ô∏è Keine Reports gefunden"

      - name: Generate Allure Report
        run: |
          npm install -g allure-commandline --save-dev
          allure generate target/allure-results --clean -o target/allure-report

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report

      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/